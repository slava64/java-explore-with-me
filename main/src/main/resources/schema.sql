DROP TABLE IF EXISTS moderation_comments CASCADE;
DROP TABLE IF EXISTS events_compilations CASCADE;
DROP TABLE IF EXISTS participation_requests CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50) NOT NULL,
    email VARCHAR(254) NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT uq_users_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uq_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(255) NOT NULL,
    pinned BOOLEAN NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    category_id INT NOT NULL,
    confirmed_requests INT,
    created_on TIMESTAMP NOT NULL,
    description TEXT,
    event_date TIMESTAMP NOT NULL,
    initiator_id INT NOT NULL,
    location_id INT NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INT,
    published_on TIMESTAMP,
    request_moderation BOOLEAN,
    state VARCHAR(50),
    title VARCHAR(120),
    views INT,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_events_locations FOREIGN KEY (location_id) REFERENCES locations (id),
    CONSTRAINT fk_events_users FOREIGN KEY (initiator_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS participation_requests (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP NOT NULL,
    event_id INT NOT NULL,
    requester_id INT NOT NULL,
    status VARCHAR(50) NOT NULL,
    CONSTRAINT pk_participation_requests PRIMARY KEY (id),
    CONSTRAINT uq_participation_requests_event_id_requester_id UNIQUE (event_id, requester_id),
    CONSTRAINT fk_participation_requests_events FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_participation_requests_users FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS events_compilations (
    event_id INT NOT NULL,
    compilation_id INT NOT NULL,
    CONSTRAINT fk_events_compilations_events FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_events_compilations_compilations FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS moderation_comments (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id INT NOT NULL,
    requester_id INT NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL,
    CONSTRAINT pk_moderation_comments PRIMARY KEY (id),
    CONSTRAINT fk_moderation_comments_events FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_moderation_comments_users FOREIGN KEY (requester_id) REFERENCES users (id)
);